{"version":3,"sources":["components/NewsCard.js","components/News.js","firebase.js","utils/titleMathcing.js","components/TopPanel.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","NewsCard","props","isImage","isVideo","Object","keys","news","fileInfo","length","classes","React","useState","expanded","setExpanded","descriptionLastIndex","description","Card","className","CardHeader","Avatar","aria-label","action","IconButton","title","subheader","date","CardMedia","image","public_url","filename","component","src","CardContent","Typography","variant","color","map","index","text","createDescriptionParagraph","CardActions","disableSpacing","clsx","onClick","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","violations","indexInner","createParagraph","memo","sortedNews","obj","sortedBy","isNumericSort","reverse","reversed","sortable","key","hasOwnProperty","push","sort","a","b","x","y","sortProperties","console","log","prevProps","nextProps","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","titles","matchTitle","slice","flexGrow","menuButton","marginRight","spacing","TopPanel","AppBar","position","style","background","Toolbar","align","db","firestore","App","loadJsonForms","forEach","url","fetch","then","response","json","formData","jsonForms","catch","error","generateNewsData","feedData","report","Date","seconds","toString","includes","split","entries","keyAnswer","answer","undefined","violation","subquestions","answers","keyQ","answerQ","generatedAnswer","returnSpinner","width","top","left","marginTop","CircularProgress","size","state","showSpinner","this","collection","get","doc","id","data","setState","isAllowedRender","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b5a36fff.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nexport default function NewsCard(props) {\n\n  //console.log(props.news)\n  let isImage = false\n  let isVideo = false\n\n  //console.log(props.news.fileInfo)\n  if (Object.keys(props.news.fileInfo).length > 0){\n\n    if (props.news.fileInfo.isImage){\n      isImage = true\n    }else{\n      isVideo = true\n    } \n  }\n\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const createParagraph = (text, index) => {\n\n    if (index==0){\n      return(\n        <Typography paragraph><b>{text}</b></Typography>\n      );\n    }else{\n      return(\n        <Typography paragraph>{text}</Typography>\n      );\n    }\n    \n  }\n\n  const descriptionLastIndex = props.news.description.length - 1\n\n  const createDescriptionParagraph = (text, index) => {\n\n    if (index==descriptionLastIndex){\n      return(\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{text}</Typography>\n      );\n    }else{\n      return(\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\"><b>{text}</b></Typography>\n      );\n    }\n    \n  }\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            ?\n          </Avatar>\n        }\n        action={\n          <IconButton aria-label=\"settings\">\n            <MoreVertIcon />\n          </IconButton>\n        }\n        title={props.news.title}\n        subheader={props.news.date}\n      />\n      {isImage ? <CardMedia\n        className={classes.media}\n        image={props.news.fileInfo.public_url}\n        title={props.news.fileInfo.filename}\n      />\n        : <div></div>\n      }\n      {isVideo ? <CardMedia\n        component='iframe'\n        title={props.news.fileInfo.filename}\n        //src='https://www.youtube.com/embed/FEG31rDg2TU'\n        src={props.news.fileInfo.public_url}\n        />\n        : <div></div>\n      }\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {Object.keys(props.news.description).map(index => ( \n            createDescriptionParagraph(props.news.description[index], index)\n          ))}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing> \n        {/* <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton>\n        <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton> */}\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph></Typography>\n\n          {Object.keys(props.news.violations).map(index => (\n              Object.keys(props.news.violations[index]).map(indexInner => (  \n\n                createParagraph(props.news.violations[index][indexInner], indexInner)\n            \n              ))\n\n            ))}          \n          <Typography></Typography>\n          \n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n}\n","import React from 'react'\nimport NewsCard from './NewsCard'\n\nimport Grid from \"@material-ui/core/Grid\";\n\nconst sortProperties = (obj, sortedBy, isNumericSort, reverse) => {\n    sortedBy = sortedBy || 1; // by default first key\n    isNumericSort = isNumericSort || false; // by default text sort\n    reverse = reverse || false; // by default no reverse\n\n    var reversed = (reverse) ? -1 : 1;\n\n    var sortable = [];\n    for (var key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            sortable.push([key, obj[key]]);\n        }\n    }\n    if (isNumericSort)\n        sortable.sort(function (a, b) {\n            return reversed * (a[1][sortedBy] - b[1][sortedBy]);\n        });\n    else\n        sortable.sort(function (a, b) {\n            var x = a[1][sortedBy],\n                y = b[1][sortedBy];\n            return x < y ? reversed * -1 : x > y ? reversed : 0;\n        });\n    return sortable; // array in format [ [ key1, val1 ], [ key2, val2 ], ... ]\n}\n\nconst News = (props) => {   \n\n    let sortedNews = sortProperties(props.news, 'timestamp', true, true)\n\n    console.log('COMPARE')\n    console.log(props.news)\n    console.log(sortedNews)\n\n    console.log(sortedNews[0][1])\n\n    return (\n\n\n        \n            sortedNews.map(news => (\n                <NewsCard news={news[1]}></NewsCard>\n        ))\n        // <Grid\n        //     container\n        //     spacing={0}\n        //     direction=\"column\"\n        //     alignItems=\"center\"\n        //     justify=\"center\"\n        //     style={{ minHeight: '100vh' }}\n        //     >\n\n        //     <Grid item xs={5}>\n        //         {\n        //             sortedNews.map(news => (\n        //                 <NewsCard news={news[1]}></NewsCard>\n        //         ))}\n        //         {/* {Object.keys(props.news).map(news => (\n        //             <NewsCard news={props.news[news]}></NewsCard>\n        //         ))} */}\n\n        //     </Grid>   \n\n        // </Grid> \n        \n    )\n}\nconst areEqual = (prevProps, nextProps) => {\n    return (prevProps.news === nextProps.news)\n}\n  \nexport default React.memo(News, areEqual); ","import firebase from 'firebase';\n\nconst firebaseConfig = {\n\n    // //STAGE\n    // apiKey: \"AIzaSyBj2q_xJTPtfgtRGz-SN8_NjVYQ9qtAzIw\",\n    // authDomain: \"electionsmonitorstaging.firebaseapp.com\",\n    // databaseURL: \"https://electionsmonitorstaging.firebaseio.com\",\n    // projectId: \"electionsmonitorstaging\",\n    // storageBucket: \"electionsmonitorstaging.appspot.com\",\n    // messagingSenderId: \"901357005980\",\n    // appId: \"1:901357005980:web:2006a62aa812492d489159\",\n    // measurementId: \"G-69DFTZBTQ7\"\n    \n    //PROD\n    apiKey: \"AIzaSyCCAhvWFvwuxDUXZ4aV-FhB_Dj-lp_frCw\",\n    authDomain: \"electionsmonitor-5d008.firebaseapp.com\",\n    databaseURL: \"https://electionsmonitor-5d008.firebaseio.com\",\n    projectId: \"electionsmonitor-5d008\",\n    storageBucket: \"electionsmonitor-5d008.appspot.com\",\n    messagingSenderId: \"145410178875\",\n    appId: \"1:145410178875:web:6cf434df68d3c65062811e\",\n    measurementId: \"G-EXC8T9QXES\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\nexport default firebase;","const titles = {\n    \"2. Общие замечания / Жалпы эскертүүлөр:\": \"Общие замечания\",\n    \"3. Общие сведения / Жалпы маалымат?\": \"Общие сведения\",\n    \"4. Нарушения на участке / Участоктогу мыйзам бузуулар\": \"Нарушения на участке\",\n    \"1. Какое нарушение вы увидели / Кандай мыйзам бузууну байкап калдыңыз?\": \"Были замечены нарушения\",\n    \"1. Я нахожусь на участке номер / Мен номер __ участогундамын:\": \"Наблюдатель прибыл на участок\",\n    \"3. Общие замечания / Жалпы эскертүүлөр:\": \"Общие замечания\",\n    \"6. Шаги, которые должны были быть сделаны до открытия урн / Урналар ачыла турганга чейинки кадамдар\": \"Нарушения до открытия урн\",\n    \"7. Должностные лица и прозрачность / Аткаминерлер жана ачык-айкындык\": \"Прозрачность подсчета голосов\",\n    \"1. Я закончил работать наблюдателем и вышел из участка в (указать время) / Мен байкоочу катары иштеп бүттүм жана участоктон чыктым (сааты):\" : \"Наблюдатель закончил работу и покинул участок\",\n    \"1. Я пришёл домой и со мной всё в порядке / Мен үйгө келдим, баардыгы жакшы:\": \"Наблюдатель пришел домой с ним все в порядке?\",\n    \"3. Какие нарушения были на участке / Участкада кандай эреже бузуулар байкалды?\": \"Нарушения на участке\",\n    \"4. Нарушения вне участка / Участканын сыртындагы эреже бузуулар\": \"Нарушения вне участка\",\n    \"5. Процедура голосования на участке / Участкадагы шайлоо тартиби\": \"Нарушены процедуры голосования\",\n    \"6. Другие наблюдатели и избиратели сообщили вам о нарушениях, которые вы не видели. Кратко опишите, что они сказали / Башка байкоочулар жана шайлоочулардан кимдир бирөө сиз көрбөгөн эреже бузуулар жөнүндө кабарлаштыбы? Эмне деп айтканын кыскача сүрөттөп бериңиз:\": \"Нарушения озвученные другими наблюдателями\",\n    \"7. Если было другое нарушение, коротко опишите / Башка эреже бузуу болсо, аны кыскача сүрөттөңүз:\": \"Нарушение\",\n    \"3. Общие замечания / Жалпы эскертүүлөр:\": \"Общие замечания\",\n    \"4. Все ли было на участке из ниже перечисленного / Төмөндөгү нерселердин баардыгы участокто барбы?\": \"Неукомлектованный участок\",\n    \"5. Процедура при открытии участка / Участок ачылып жаткан учурдагы сактала турган талаптар\": \"Нарушения про открытии участка\",\n    \"6. Были ли посторонние люди при открытии участка / Участок ачылып жатканда чоочун адмадар бар беле?\": \"Посторонние люди при открытии участка\"\n}\n\nconst matchTitle = (title) => {\n    if (title in titles) {\n        return titles[title]\n    }\n    else {\n        return title.slice(3)\n    }      \n}\n\nexport default matchTitle;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function TopPanel() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" style={{ background: '#2E3B55' }}>\n        <Toolbar>\n          {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton> */}\n          <Typography variant=\"h6\" className={classes.title} align=\"center\">\n            Нарушения на избирательных участках \n          </Typography>\n          {/* <Button color=\"inherit\">Login</Button>\n           */}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from 'react';\nimport News from './components/News'\n\nimport firebase from './firebase';\nimport matchTitle from './utils/titleMathcing'\nimport TopPanel from './components/TopPanel'\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst db = firebase.firestore()\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {showSpinner: true};   \n\n    this.jsonForms = {}\n    this.news = {}    \n  }    \n\n  //Костыль чтобы не делать мульон запросов!\n  loadJsonForms = () => {\n\n    const formUrls = [\n      'https://raw.githubusercontent.com/KloopMedia/ElectionsMonitoringFormsConfig/master/final_form_afternoon.json',\n      'https://raw.githubusercontent.com/KloopMedia/ElectionsMonitoringFormsConfig/master/final_form_emergency.json',\n      'https://raw.githubusercontent.com/KloopMedia/ElectionsMonitoringFormsConfig/master/final_form_enter.json',\n      'https://raw.githubusercontent.com/KloopMedia/ElectionsMonitoringFormsConfig/master/final_form_evening.json',\n      'https://raw.githubusercontent.com/KloopMedia/ElectionsMonitoringFormsConfig/master/final_form_exit.json',\n      'https://raw.githubusercontent.com/KloopMedia/ElectionsMonitoringFormsConfig/master/final_form_home.json',\n      'https://raw.githubusercontent.com/KloopMedia/ElectionsMonitoringFormsConfig/master/final_form_mobile.json',\n      'https://raw.githubusercontent.com/KloopMedia/ElectionsMonitoringFormsConfig/master/final_form_morning.json'\n    ]\n\n    formUrls.forEach((url) => {\n      fetch(url)\n      .then(response => response.json())\n      .then((formData) => {\n        this.jsonForms[url] = formData             \n      })\n      .catch((error) => {\n        console.error(error)\n      })          \n    })\n\n    console.log(this.jsonForms)\n  }\n\n  generateNewsData = (feedData, formData) => {    \n\n    let report = {}\n    let violations = []\n    let description = []\n    let fileInfo = {}\n\n    //Если файл\n    if(feedData.hasOwnProperty('fileId')){\n\n      //console.log(feedData)\n      //TODO\n      report['title'] = 'Нарушения на участке: ?'\n      report['date'] = new Date(feedData['date'].seconds*1000).toString();\n      report['timestamp'] = feedData['date'].seconds\n\n      fileInfo['public_url'] = feedData['public_url']\n      fileInfo['filename'] = feedData['filename']\n\n      const imgExt = ['jpg', 'jpeg', 'png']\n      if (imgExt.includes(feedData['filename'].split(\".\")[-1]))\n      {\n        fileInfo['isImage'] = true        \n      } else {\n        fileInfo['isImage'] = false\n      }\n\n      report['violations'] = violations     \n      report['description'] = description  \n      report['fileInfo'] = fileInfo\n\n      this.news[feedData['fileId']] = report   \n\n    //Если форма\n    } else {\n\n      //TODO\n      report['title'] = 'Нарушения на участке: ?'\n      report['date'] = new Date(feedData['timestamp'].seconds*1000).toString();\n      report['timestamp'] = feedData['timestamp'].seconds\n\n      Object.entries(feedData['answers']).forEach(([keyAnswer, answer]) => {\n\n        if (answer === null || answer === undefined ){\n          console.log('ERROR')\n          return\n        }\n        //console.log(`${keyAnswer} ${answer}`)\n        let violation = []\n\n        if (formData['questions'][keyAnswer]['type'] == 'multiradio'){\n          let title = formData['questions'][keyAnswer]['title']              \n          //console.log(title)  \n          \n          violation.push(title.slice(3))  \n          description.push(matchTitle(title))               \n\n          const subquestions = formData['questions'][keyAnswer]['subquestion'] \n          //console.log(subquestions)\n\n          const answers = formData['questions'][keyAnswer]['answer'] \n          Object.entries(answer).forEach(([keyQ, answerQ]) => {\n            //console.log(subquestions[key]['q'])\n            //console.log(answers[answer])\n\n            \n            let generatedAnswer = subquestions[keyQ]['q'] + ' ответ: ' + answers[answerQ]\n            violation.push(generatedAnswer)\n            \n            // console.log(\"CHECK\")\n            // console.log(typeof(answerQ.toString()))\n            // console.log(typeof(subquestions[keyQ]['on']))\n            // //Выводить только если отличается от вопроса по умолчанию?\n            // if(answerQ.toString() == subquestions[keyQ]['on'])\n            // {\n            //   let generatedAnswer = subquestions[keyQ]['q'] + ' ответ: ' + answers[answerQ]\n            //   violation.push(generatedAnswer)\n            // }\n            \n          });\n\n          violations.push(violation)\n\n        } else if (formData['questions'][keyAnswer]['type'] == 'input' || formData['questions'][keyAnswer]['type'] == 'time'){\n          \n          let title = formData['questions'][keyAnswer]['title']              \n          //console.log(title)  \n          \n          violation.push(title.slice(3))  \n          description.push(matchTitle(title))    \n\n          violation.push(answer)\n\n          violations.push(violation)\n\n        } else if (formData['questions'][keyAnswer]['type'] == 'radio'){\n          \n          let title = formData['questions'][keyAnswer]['title']              \n          //console.log(title)  \n          \n          violation.push(title.slice(3))  \n          description.push(matchTitle(title))    \n\n          const answers = formData['questions'][keyAnswer]['answer']\n          violation.push(answers[answer])\n\n          violations.push(violation)          \n        }       \n        \n      });\n\n      description.push('(разверните пост для детального просмотра)')\n\n      report['violations'] = violations     \n      report['description'] = description  \n      report['fileInfo'] = fileInfo\n\n      this.news[feedData['responseId']] = report\n      \n    }    \n  }\n\n  componentDidMount() {      \n    \n    this.loadJsonForms()\n\n    //Получаем все формы с ответами\n    db.collection(\"feed\").get()\n    .then(response => {\n      response.forEach(doc => {\n\n        console.log(doc.id, '=>', doc.data())\n\n        const feedData = doc.data()    \n\n        //Выводим файлы или \"формы наблюдателей\" \n        if(feedData.hasOwnProperty('form_url')){\n\n          //костыль чтобы не обрабатывать старые формы\n          if (this.jsonForms.hasOwnProperty(feedData['form_url']) == false){\n            console.log(\"OLD FROM!!!\")\n            console.log(feedData['form_url'])\n            return\n          }\n\n          let formData = this.jsonForms[feedData['form_url']]\n          this.generateNewsData(feedData, formData)         \n        }\n      });    \n      \n      //STATE \n      if (this.state.news !== this.news){                 \n            \n        this.setState({\n          news: this.news\n        });\n      }    \n\n      this.setState({showSpinner: false})\n    })   \n  }  \n\n  returnSpinner = () => {\n    return (\n    <div style = {{\n      position: 'absolute',\n      height: '100px',\n      width: '100px',\n      top: '50%',\n      left: '50%',\n      marginLeft: '-50px',\n      marginTop: '-50px',\n      }}>\n      <CircularProgress size={100} style={{color: 'grey'}}/>\n    </div>\n    )\n  }\n  \n  render () {\n\n    let isAllowedRender = true\n    if(this.state.news === undefined) {\n      isAllowedRender = false\n    }   \n\n    return (\n   <div>     \n     <TopPanel></TopPanel>\n     {this.state.showSpinner ? this.returnSpinner() : <div></div>}\n     {isAllowedRender\n        ? <News news={this.state.news}></News>\n        : <div></div>\n      }\n   </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}